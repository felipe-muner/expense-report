{{#section 'head'}}
  <style media="screen">
    .table > thead > tr > th {
      border-right: 1px solid white;
    }
  </style>
{{/section}}
<div class="panel panel-primary">
  <div class="panel-heading">{{{i18n 'newPage.titlePanel'}}}</div>
  <div class="panel-body">
    <form id="formExpenseReport">
      <div class="row">
        <div class="col-sm-4">
          <label for="">1 - {{{i18n 'newPage.tipo'}}} -></label>
          <select id="ExpenseReportType_ID" name="ExpenseReportType_ID" style="width:100%;" required>
            <option value="">Select</option>
            {{#each TypeExpenseReport}}
              <option value="{{ExpenseReportTypeID}}">{{{i18n NameType}}}</option>
            {{/each}}
          </select>
        </div>
        <div class="col-sm-4">
          <label for="">2 - {{{i18n 'newPage.budget'}}} -></label>
          <select id="id_budget" name="id_budget" style="width:100%;" required>
            <option value="">Select</option>
            {{#each sess.budgets}}
              <option data-setor="{{setor}}" data-grupo="{{grupo}}" data-conta="{{conta}}" data-ncont="{{nomecont}}" data-saldo="{{saldo}}" data-conta-orca="{{pad setor 3 0}} {{pad grupo 3 0}} {{pad conta 4 0}}" value="{{id_orca}}">{{pad setor 3 0}} {{pad grupo 3 0}} {{conta}} {{ncont}} - R${{addDecimalCases saldo}}</option>
            {{/each}}
          </select>
        </div>
        <div class="col-sm-4">
          <label for="">3 - {{{i18n 'newPage.moeda'}}}</label>
          <select id="Currency" name="Currency" style="width:100%;" required>
            <option value="">Select</option>
            {{#each Currency}}
              <option value="{{code}}" data-quotation={{quotation}} data-currency={{code}}>{{completeName}} - R$ {{quotation}}</option>
            {{/each}}
          </select>
        </div>
      </div>
      <div class="row" style="margin-top:10px;">
        <div class="col-sm-4">
          <label for="">{{{i18n 'newPage.requestby'}}}</label>
          <input type="text" name="RequestedBy" value="{{toTitleCase sess.nomeusuario}}" class="form-control" required>
        </div>
        <div class="col-sm-4">
          <label for="">{{{i18n 'newPage.authorizedby'}}}</label>
          <select name="AuthorizeBy" id="AuthorizeBy" style="width:100%;" required>
          </select>
        </div>
        <div class="col-sm-4">
          <label for="">{{{i18n 'newPage.event'}}}</label>
          <input type="text" name="EventName" id="EventName" value="" class="form-control" required>
        </div>
      </div>

      <!--  TABELA DESPESAS-->
      <div class="row" style="margin-top:10px;">
        <div class="col-sm-12" id="divTableExpense" style="display:none;">
          <!-- TABELA EXPENSE WS AND REAL -->
          <table class="table tableExpense" style="width:100%;margin-bottom:5px;" id="expenseWSReal">
            <thead>
              <tr style="background-color:#2A3F54;color:#FFF;">
                <th style="width:15%;">{{{i18n 'newPage.datePayment'}}}</th>
                <th style="width:55%;">{{{i18n 'newPage.description'}}}</th>
                <th style="width:15%;">{{{i18n 'newPage.centrocusto'}}}</th>
                <th style="width:10%;">{{{i18n 'newPage.value'}}}</th>
                <th style="width:5%;">&nbsp;</th>
              </tr>
            </thead>
            <tbody>
              <tr class="expenseLine">
                <td>
                  <input type="date" name="DataPayment" value="" class="form-control">
                </td>
                <td>
                  <input type="text" name="Description" value="" class="form-control">
                </td>
                <td>
                  <select name="CostCenter" class="form-control CostCenter">
                    <option value="">Select</option>
                    {{#each allCostCenter}}
                      <option value="{{Number}}">{{Number}} - {{Name}}</option>
                    {{/each}}
                  </select>
                </td>
                <td>
                  <input type="number" name="ValueExpense" value="" step="0.01" min="0" class="form-control">
                </td>
                <td class="text-center">
                  <i style="font-size:23px;" class="fa fa-plus-square" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="More Line" data-container="body" onclick="appendTR(this);"></i>
                </td>
              </tr>
            </tbody>
          </table>

          <!-- TABELA EXPENSE WS AND NOT REAL -->
          <table class="table tableExpense" style="width:100%;margin-bottom:5px;" id="expenseWSNotReal">
            <thead>
              <tr style="background-color:#2A3F54;color:#FFF;">
                <th style="width:15%;">{{{i18n 'newPage.datePayment'}}}</th>
                <th style="width:45%;">{{{i18n 'newPage.description'}}}</th>
                <th style="width:15%;">{{{i18n 'newPage.centrocusto'}}}</th>
                <th style="width:10%;">{{{i18n 'newPage.value'}}}</th>
                <th style="width:10%;">{{{i18n 'newPage.valueBR'}}}</th>
                <th style="width:5%;">&nbsp;</th>
              </tr>
            </thead>
            <tbody>
              <tr class="expenseLine">
                <td>
                  <input type="date" name="DataPayment" value="" class="form-control">
                </td>
                <td>
                  <input type="text" name="Description" value="" class="form-control">
                </td>
                <td>
                  <select name="CostCenter" class="form-control CostCenter">
                    <option value="">Select</option>
                    {{#each allCostCenter}}
                      <option value="{{Number}}">{{Number}} - {{Name}}</option>
                    {{/each}}
                  </select>
                </td>
                <td>
                  <input type="number" name="ValueExpense" value="" step="0.01" min="0" class="form-control" onkeyup="updateValueReal(this)">
                </td>
                <td>
                  <input type="number" name="ValueReal" value="" step="0.01" min="0" class="form-control realValue" readonly>
                </td>
                <td class="text-center">
                  <i style="font-size:23px;" class="fa fa-plus-square" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="More Line" data-container="body" onclick="appendTR(this);"></i>
                </td>
              </tr>
            </tbody>
          </table>
          <!-- TABELA EXPENSE NOT WS AND REAL -->
          <table class="table tableExpense" style="width:100%;margin-bottom:5px;" id="expenseNotWSReal">
            <thead>
              <tr style="background-color:#2A3F54;color:#FFF;">
                <th style="width:15%;">{{{i18n 'newPage.datePayment'}}}</th>
                <th style="width:70%;">{{{i18n 'newPage.description'}}}</th>
                <th style="width:10%;">{{{i18n 'newPage.value'}}}</th>
                <th style="width:5%;">&nbsp;</th>
              </tr>
            </thead>
            <tbody>
              <tr class="expenseLine">
                <td>
                  <input type="date" name="DataPayment" value="" class="form-control">
                </td>
                <td>
                  <input type="text" name="Description" value="" class="form-control">
                </td>
                <td>
                  <input type="number" name="ValueExpense" value="" step="0.01" min="0" class="form-control">
                </td>
                <td class="text-center">
                  <i style="font-size:23px;" class="fa fa-plus-square" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="More Line" data-container="body" onclick="appendTR(this);"></i>
                </td>
              </tr>
            </tbody>
          </table>

          <!-- TABELA EXPENSE NOT WS NOT REAL -->
          <table class="table tableExpense" style="width:100%;margin-bottom:5px;" id="expenseNotWSNotReal">
            <thead>
              <tr style="background-color:#2A3F54;color:#FFF;">
                <th style="width:15%;">{{{i18n 'newPage.datePayment'}}}</th>
                <th style="width:60%;">{{{i18n 'newPage.description'}}}</th>
                <th style="width:10%;">{{{i18n 'newPage.value'}}}</th>
                <th style="width:10%;">{{{i18n 'newPage.valueBR'}}}</th>
                <th style="width:5%;">&nbsp;</th>
              </tr>
            </thead>
            <tbody>
              <tr class="expenseLine">
                <td>
                  <input type="date" name="DataPayment" value="" class="form-control">
                </td>
                <td>
                  <input type="text" name="Description" value="" class="form-control">
                </td>
                <td>
                  <input type="number" name="ValueExpense" value="" step="0.01" min="0" class="form-control" onkeyup="updateValueReal(this)">
                </td>
                <td>
                  <input type="number" name="ValueReal" value="" step="0.01" min="0" class="form-control realValue" readonly>
                </td>
                <td class="text-center">
                  <i style="font-size:23px;" class="fa fa-plus-square" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="More Line" data-container="body" onclick="appendTR(this);"></i>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <!--  TABELA DESPESAS-->

      <div class="text-center row" style="margin-top:10px;">
        <input type="submit" name="btnSubmit" value="{{{i18n 'newPage.submitForm'}}}" class="btn btn-success btn-xs">
      </div>
    </form>
  </div>
</div>

<div id="msgLocale" style="display:none;">
  <span id="msgDateBefore">{{{i18n 'newPage.msgDateBefore'}}}</span>
  <span id="msgDescriptionError">{{{i18n 'newPage.msgDescriptionError'}}}</span>
  <span id="msgCostCenterError">{{{i18n 'newPage.msgCostCenterError'}}}</span>
  <span id="msgValueError">{{{i18n 'newPage.msgValueError'}}}</span>
  <span id="msgSaldoInsuficienteError">{{{i18n 'newPage.msgInsufficientFundsError'}}}</span>
</div>

{{#section 'script'}}

  <script>
    $(document).ready(function(e){
      $('#ExpenseReportType_ID').val('1').trigger('change');
      $('#id_budget').val('999999').trigger('change');
      $('#Currency').val('BRL').trigger('change');
      $('#EventName').val('teste muner')
    })

    $('#ExpenseReportType_ID').select2()
    $('#Currency').select2()
    $('#id_budget').select2()
    $('#AuthorizeBy').select2()
    $('[data-toggle="tooltip"]').tooltip({
      "trigger" : 'hover'
    })

    $('#id_budget, #Currency').change(function(e) {
      if( '' === $('#id_budget').val() && '' !== $('#Currency').val() ){
        $('#divTableExpense').css('display','none')
        clearAuthorizedBy()
      }else if( '' === $('#id_budget').val() || '' === $('#Currency').val() ){
        $('#divTableExpense').css('display','none')
      }else{
        if('999999' === $('#id_budget').val() && 'BRL' === $('#Currency').val()){
          searchApprovers()
          $('.tableExpense').css('display','none')
          $('#expenseWSReal').css('display','block')
        }else if('999999' === $('#id_budget').val() && 'BRL' !== $('#Currency').val()){
          searchApprovers()
          $('.tableExpense').css('display','none')
          $('#expenseWSNotReal').css('display','block')
        }else if('999999' !== $('#id_budget').val() && 'BRL' === $('#Currency').val()){
          searchApprovers()
          $('.tableExpense').css('display','none')
          $('#expenseNotWSReal').css('display','block')
        }else if('999999' !== $('#id_budget').val() && 'BRL' !== $('#Currency').val()){
          searchApprovers()
          $('.tableExpense').css('display','none')
          $('#expenseNotWSNotReal').css('display','block')
        }
        $('.expenseLine').find('input').val('')
        $('.expenseLine').find('select').val('')
        $('.expenseLine').css('background-color', '#FFF')
        $('.linhaAdicional').remove()
        $('#divTableExpense').css('display','block')
      }
    })

    function appendTR(el){
      let newLine = $(el).closest('tbody').find('tr').eq(0).clone()
      $(newLine).find('input').val('')
      $(newLine).find('td:last').html('<i style="font-size:23px;" class="fa fa-trash" aria-hidden="true" onclick="$(this).closest(\'tr\').remove()" data-toggle="tooltip" data-container="body" data-placement="bottom" title="Less Line"></i>')
      $(newLine).addClass('linhaAdicional')
      $(newLine).css('background-color', '#FFF')
      $(el).closest('tbody').append(newLine)
    }

    function searchApprovers(){
      // alert('buscarei aprovador')
      if('999999' === $('#id_budget').val()){
        $('#AuthorizeBy option').remove()
        var optionCR = new Option("Claudia Ribeiro", "Claudia Ribeiro")
        var optionDM = new Option("Denise Martins", "Denise Martins")
        $('#AuthorizeBy').append(optionCR).append(optionDM)
      }else{
        let dataSend = {
          "id_budget": $('#id_budget').val()
        }
        $.ajax({
          url: '/expense-report/approver-by-budget',
          type: 'POST',
          data: dataSend,
          dataType:'json',
          success: function(data) {
            $('#AuthorizeBy option').remove()
            $('#AuthorizeBy').append(new Option('Select', ''))
            data.Approvers.map(function(e){
              $('#AuthorizeBy').append(new Option(toTitleCase(e.Fname) + ' ' + toTitleCase(e.LName), e.ID_USER))
            })
          }
        })
      }
    }

    function clearAuthorizedBy(){
      $('#AuthorizeBy option').remove()
      var option = new Option("First select the budget ", "")
      $('#AuthorizeBy').append(option)
      //alert('limpar tabelas')
    }

    $('#formExpenseReport').submit(function(e){
      e.preventDefault()

      let dataSend = $(this).serializeArray()
      dataSend.push({name: 'listExpense', value: JSON.stringify(serializeExpense())})
      dataSend.push({name: 'ContaOrca', value: $('#id_budget option:selected').data('conta-orca')})
      dataSend.push({name: 'CurrencyName', value: $('#Currency option:selected').data('currency')})
      dataSend.push({name: 'CurrencyQuotation', value: $('#Currency option:selected').data('quotation')})

      validateBalanceBudget()

      $.ajax({
        url: '/expense-report/create',
        type: 'POST',
        data: dataSend,
        dataType:'json',
        success: function(data) {
          console.log(data)
          swal({
            title:"",
            text: data.ExpenseReportedCreated,
            type: "success"
          }).then(
            function () {
              // window.location.replace(data.redirect)
            }
          )
        }
      })
    })

    function serializeExpense(){
      let arrayListExpense = []
      $('.tableExpense:visible .expenseLine').each(function(e){
        let that = this
        let newLine = {
          DatePayment: $(this).find('input[name=DataPayment]').val(),
          Description: $(this).find('input[name=Description]').val(),
          CostCenter: $(this).find('select[name=CostCenter]').val(),
          ValueExpense: $(this).find('input[name=ValueExpense]').val()
        }

        if( '999999' === $('#id_budget').val() ){
          Object.keys(newLine).forEach(function(e){
            if( 'DatePayment' === e ){
              if( '' === newLine[e] || moment(newLine[e]).isBefore(moment().format('YYYY-MM-DD')) ){
                swal({
                  title:"",
                  text: $('#msgDateBefore').text(),
                  type: "error"
                }).then(
                  function () {
                    $(that).css('background-color','#EBCCD1')
                  }
                )
                throw new Error('DATA DESPESA INCORRETA')
              }
            }else if( 'Description' === e && '' === newLine[e]){
              swal({
                title:"",
                text: $('#msgDescriptionError').text(),
                type: "error"
              }).then(
                function () {
                  $(that).css('background-color','#EBCCD1')
                }
              )
              throw new Error('DESCRIPTION DESPESA INCORRETA')
            }else if( 'CostCenter' === e && '' === newLine[e]){
              swal({
                title: "",
                text: $('#msgCostCenterError').text(),
                type: "error"
              }).then(
                function () {
                  $(that).css('background-color','#EBCCD1')
                }
              )
              throw new Error('COST CENTER INCORRETA')
            }else if( 'ValueExpense' === e && '' === newLine[e] ){
              swal({
                title: "",
                text: $('#msgValueError').text(),
                type: "error"
              }).then(
                function () {
                  $(that).css('background-color','#EBCCD1')
                }
              )
              throw new Error('VALUE INCORRETO')
            }
          })
        }else{
          Object.keys(newLine).forEach(function(e){
            if( 'DatePayment' === e ){
              if( '' === newLine[e] || moment(newLine[e]).isBefore(moment().format('YYYY-MM-DD')) ){
                swal({
                  title: "",
                  text: $('#msgDateBefore').text(),
                  type: "error"
                }).then(
                  function () {
                    $(that).css('background-color','#EBCCD1')
                  }
                )
                throw new Error('DATA DESPESA INCORRETA')
              }
            }else if( 'Description' === e && '' === newLine[e]){
              swal({
                title: "",
                text: $('#msgDescriptionError').text(),
                type: "error"
              }).then(
                function () {
                  $(that).css('background-color','#EBCCD1')
                }
              )
              throw new Error('DESCRIPTION DESPESA INCORRETA')
            }else if( 'ValueExpense' === e && '' === newLine[e] ){
              swal({
                title: "",
                text: $('#msgValueError').text(),
                type: "error"
              }).then(
                function () {
                  $(that).css('background-color','#EBCCD1')
                }
              )
              throw new Error('VALUE INCORRETO')
            }
          })
        }
        arrayListExpense.push(newLine)
      })
      console.log(arrayListExpense)
      return arrayListExpense
    }

    function updateValueReal(el){
      let valueForeign = parseFloat($(el).val()) * parseFloat($("#Currency option:selected").data('quotation'))
      $(el).closest('tr').find('.realValue').val(valueForeign.toFixed(2))
    }

    function validateBalanceBudget(){
      let sumTotal = 0
      $('.tableExpense:visible .expenseLine').each(function(e){
        sumTotal += $(this).find('[name=ValueExpense]').val() * parseFloat($("#Currency option:selected").data('quotation'))
        debugger
        if(sumTotal > $("#id_budget option:selected").data('saldo')){
          swal({
            title: "",
            text: $('#msgSaldoInsuficienteError').text(),
            type: "error"
          }).then(
            function () {
              $(that).css('background-color','#EBCCD1')
            }
          )
          throw new Error('Saldo Insuficiente')
        }
      })
    }

  </script>

{{/section}}
